// While/Do
// Voc√™ aprendeu a trabalhar com o loop for e agora sabe que ao utiliz√°-lo voc√™ deve informar qual a quantidade de itera√ß√µes ele dever√° realizar mas, j√° parou para pensar o que acontece quando voc√™ n√£o sabe quantas vezes um loop deve se repetir? ü§î
// "Por exemplo, quando precisamos descobrir se duas vari√°veis possuem o mesmo valor.
// ‚ö†Ô∏è Tenha muito cuidado! √â f√°cil causar loops infinitos utilizando o while!
// Ao contr√°rio do for, o while executa a itera√ß√£o com apenas uma condi√ß√£o. Enquanto essa condi√ß√£o for verdadeira o conte√∫do de escopo do while vai sendo cumprido e ao encontrar uma condi√ß√£o falsa o bloco √© ent√£o encerrado. Por exemplo:


let counter = 0;

while(counter !== 5) {
  counter += 1;
}

//Neste caso o while ir√° rodar at√© que a vari√°vel counter alcance o valor 5. Mas e se o valor inicial fosse 6, o que aconteceria?
//Ele entraria em um loop infinito, e provavelmente travaria o computador. Para ent√£o n√£o termos esse problema √© importante nos certificarmos do valor inicial que ser√° atribu√≠do.
//üí° Dica: com o comando break √© poss√≠vel tamb√©m encerrar o loop while quando assim desejar. Veja um exemplo aqui.
//Para o exemplo que falamos anteriormente, a solu√ß√£o utilizando while, seria a seguinte.


function dice () { 
    return Math.ceil(Math.random() * 6);
}
let d1 = dice();
let d2 = dice();
while (d1 === d2) {
    d2 = dice();
}